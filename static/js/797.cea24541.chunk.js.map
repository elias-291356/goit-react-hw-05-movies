{"version":3,"file":"static/js/797.cea24541.chunk.js","mappings":"iOAyDA,UArDmB,WACjB,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA+BC,EAAAA,EAAAA,MAA/B,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAMXC,EAAaJ,EAAOK,IAAI,SAiB9B,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAW,mCAAG,gHAEUC,EAAAA,EAAAA,IAAcJ,GAFxB,gBAERK,EAFQ,EAERA,QACRX,EAAiBW,GAHD,gDAKhBC,QAAQC,IAAR,MALgB,yDAAH,qDAQjBJ,EAAYH,EATX,CAUF,GAAE,CAACA,KAGF,0BACE,kBAAMQ,SAvBO,SAAAC,GACfA,EAAMC,iBACNb,EAAa,CAAEc,MAAOF,EAAMG,cAAcC,SAASC,WAAWC,OAC/D,EAoBG,WACE,kBACEC,UAAU,mBACVC,YAAY,wBACZC,KAAK,OACLC,KAAK,aACLC,aAAcpB,KAEhB,mBAAQgB,UAAU,oBAAoBE,KAAK,SAA3C,SAAoD,YAGpD,wBACGzB,EAAY4B,KAAI,SAAAC,GAAK,OACpB,eAAmBN,UAAU,aAA7B,UACE,SAAC,KAAD,CAAMO,MAAO,CAAEC,KAAM1B,GAAY2B,GAAE,kBAAaH,EAAMI,IAAtD,SACGJ,EAAMK,OAASL,EAAMH,QAFjBG,EAAMI,GADK,UAW/B,C,sLChDKE,E,OAAWC,EAAAA,OAAa,CAC7BC,QAHgB,+BAIhBlC,OAAQ,CACPmC,SAAU,QACVC,QALc,sCAUHC,EAAkB,mCAAG,sGACVL,EAAS3B,IAAI,qBADH,uBACzBiC,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAIlB9B,EAAa,mCAAG,WAAO+B,GAAP,yFACLP,EAAS3B,IAAI,gBAAiB,CACpDL,OAAQ,CACPe,MAAOwB,KAHmB,uBACpBD,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,sDAUbE,EAAc,mCAAG,WAAOC,GAAP,yFACNT,EAAS3B,IAAT,iBAAuBoC,IADjB,uBACrBH,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAMdI,EAAY,mCAAG,WAAOD,GAAP,yFACJT,EAAS3B,IAAT,iBAAuBoC,EAAvB,WADI,uBACnBH,EADmB,EACnBA,KADmB,kBAGpBA,GAHoB,2CAAH,sDAKZK,EAAc,mCAAG,WAAOF,GAAP,yFACNT,EAAS3B,IAAT,iBAAuBoC,EAAvB,aADM,uBACrBH,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD","sources":["pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport { requestMovies } from '../services/api';\nconst MoviesPage = () => {\n  const [searchMovie, setsearchedMovie] = useState([]);\n  const [params, setUseParams] = useSearchParams();\n  const location = useLocation();\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setUseParams({ query: event.currentTarget.elements.inputQuery.value });\n  };\n  const queryValue = params.get('query');\n\n  useEffect(() => {\n    if (!queryValue) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const { results } = await requestMovies(queryValue);\n        setsearchedMovie(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies(queryValue);\n  }, [queryValue]);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          className=\"input is-warning\"\n          placeholder=\"search for a movie...\"\n          type=\"text\"\n          name=\"inputQuery\"\n          defaultValue={queryValue}\n        />\n        <button className=\"button is-success\" type=\"submit\">\n          search\n        </button>\n        <ul>\n          {searchMovie.map(movie => (\n            <li key={movie.id} className=\"title is-6\">\n              <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                {movie.title || movie.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </form>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","// f2ffea4938b1399a0724ac9ef0692c2b\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmMmZmZWE0OTM4YjEzOTlhMDcyNGFjOWVmMDY5MmMyYiIsInN1YiI6IjY1MjNmYzc2NzQ1MDdkMDBjNTdkNmExZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.95HCn9y3f3Oli4ct9fXYlAdce3u1F6PTA3XkLljTbM8\n\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f2ffea4938b1399a0724ac9ef0692c2b';\nconst instance = axios.create({\n\tbaseURL: BASE_URL,\n\tparams: {\n\t\tlanguage: 'en-US',\n\t\tapi_key: API_KEY\n\t}\n});\n\n// Функция сервиса\nexport const requestTrendMovies = async () => {\n\tconst { data } = await instance.get('/trending/all/day');\n\treturn data;\n};\nexport const requestMovies = async (inputValue) => {\n\tconst { data } = await instance.get('/search/movie', {\n\t\tparams: {\n\t\t\tquery: inputValue // это будет значение, которое ввели в инпут\n\t\t}\n\t});\n\n\treturn data;\n};\n\nexport const requestDetails = async (movieId) => {\n\tconst { data } = await instance.get(`/movie/${movieId}`);\n\treturn data;\n\n};\n\nexport const requestCasts = async (movieId) => {\n\tconst { data } = await instance.get(`/movie/${movieId}/casts`);\n\n\treturn data;\n};\nexport const requestReviews = async (movieId) => {\n\tconst { data } = await instance.get(`/movie/${movieId}/reviews`);\n\n\treturn data;\n};\n"],"names":["useState","searchMovie","setsearchedMovie","useSearchParams","params","setUseParams","location","useLocation","queryValue","get","useEffect","fetchMovies","requestMovies","results","console","log","onSubmit","event","preventDefault","query","currentTarget","elements","inputQuery","value","className","placeholder","type","name","defaultValue","map","movie","state","from","to","id","title","instance","axios","baseURL","language","api_key","requestTrendMovies","data","inputValue","requestDetails","movieId","requestCasts","requestReviews"],"sourceRoot":""}