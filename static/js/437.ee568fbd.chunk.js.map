{"version":3,"file":"static/js/437.ee568fbd.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","webpack://react-homework-template/./src/pages/stylePages.module.css?c1b9","pages/MoviesDetails.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestCasts } from 'services/api';\n\nconst Cast = () => {\n  const [fetchResultCast, setFetchResultCast] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchCast = async () => {\n      try {\n        const result = await requestCasts(movieId);\n\n        setFetchResultCast(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <ul>\n          {fetchResultCast?.cast?.length > 0 ? (\n            fetchResultCast.cast.map(el => (\n              <li key={el.id}>\n                <figure className='className=\"image is-4by3\"'>\n                  <img\n                    src={`http://image.tmdb.org/t/p/w300${el.profile_path}`}\n                    alt=\"Actor\"\n                  />\n                </figure>\n                <p className='title is-4\"'>{el.original_name}</p>\n                <p className=\"subtitle is-6\">Character{el.character}</p>\n              </li>\n            ))\n          ) : (\n            <li>\n              <p>No information about the film cast</p>\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [fetchResultReviews, setFetchResultReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const results = await requestReviews(movieId);\n        setFetchResultReviews(results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div className=\"content is-normal\">\n      <ul>\n        {fetchResultReviews?.results?.length > 0 ? (\n          fetchResultReviews.results.map(el => (\n            <li key={el.id}>\n              <p>Author: {el.author}</p>\n              {el.content ? <p>{el.content}</p> : <p>No reviews available</p>}\n            </li>\n          ))\n        ) : (\n          <li>\n            <p>No reviews available</p>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailseWrap\":\"stylePages_movieDetailseWrap__PhbaZ\",\"movieDetailseDescr\":\"stylePages_movieDetailseDescr__h6Qq2\",\"movieDetailseImg\":\"stylePages_movieDetailseImg__jmQUF\",\"character\":\"stylePages_character__v4VA-\"};","import Cast from 'components/Cast/Cast';\nimport Loader from 'components/Loader/Loader';\nimport Reviews from 'components/Reviews/Reviews';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { requestDetails } from 'services/api';\nimport styles from './stylePages.module.css';\n\nconst MoviesDetails = () => {\n  // const [error, setError] = useState(null);\n  const [ResultMovieDetailse, setResultMovieDetailse] = useState();\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backMoviesPageRef = useRef(location.state?.from);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await requestDetails(movieId);\n\n        setResultMovieDetailse(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <div>\n        <Link className=\"button is-dark\" to={backMoviesPageRef.current ?? '/'}>\n          Go back\n        </Link>\n        {ResultMovieDetailse && (\n          <div\n            key={ResultMovieDetailse.id}\n            className={styles.movieDetailseWrap}\n          >\n            <img\n              src={`https://image.tmdb.org/t/p/w500${ResultMovieDetailse.poster_path}`}\n              alt={ResultMovieDetailse.title}\n              className={styles.movieDetailseImg}\n            />\n            <div className={styles.movieDetailseDescr}>\n              <h1>{ResultMovieDetailse.original_title}</h1>\n              <p>User Score {ResultMovieDetailse.popularity}</p>\n              <h2>Overview</h2>\n              <p>{ResultMovieDetailse.overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {ResultMovieDetailse.genres.map(genre => (\n                  <p key={genre.id}>{genre.title || genre.name}</p>\n                ))}\n              </ul>\n            </div>\n          </div>\n        )}\n      </div>\n      <div>\n        <h3 className=\"title is-4\"> Additional information</h3>\n        <Link to=\"cast\" className=\"title is-6\">\n          Cast\n        </Link>\n        <Link to=\"reviews\" className=\"title is-6 is-light\">\n          /Reviews\n        </Link>\n      </div>\n      <div>\n        <Suspense fallback={<Loader />}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Reviews />} />\n          </Routes>\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","// f2ffea4938b1399a0724ac9ef0692c2b\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmMmZmZWE0OTM4YjEzOTlhMDcyNGFjOWVmMDY5MmMyYiIsInN1YiI6IjY1MjNmYzc2NzQ1MDdkMDBjNTdkNmExZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.95HCn9y3f3Oli4ct9fXYlAdce3u1F6PTA3XkLljTbM8\n\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f2ffea4938b1399a0724ac9ef0692c2b';\nconst instance = axios.create({\n\tbaseURL: BASE_URL,\n\tparams: {\n\t\tlanguage: 'en-US',\n\t\tapi_key: API_KEY\n\t}\n});\n\n// Функция сервиса\nexport const requestTrendMovies = async () => {\n\tconst { data } = await instance.get('/trending/all/day');\n\treturn data;\n};\nexport const requestMovies = async (inputValue) => {\n\tconst { data } = await instance.get('/search/movie', {\n\t\tparams: {\n\t\t\tquery: inputValue // это будет значение, которое ввели в инпут\n\t\t}\n\t});\n\n\treturn data;\n};\n\nexport const requestDetails = async (movieId) => {\n\tconst { data } = await instance.get(`/movie/${movieId}`);\n\treturn data;\n\n};\n\nexport const requestCasts = async (movieId) => {\n\tconst { data } = await instance.get(`/movie/${movieId}/casts`);\n\n\treturn data;\n};\nexport const requestReviews = async (movieId) => {\n\tconst { data } = await instance.get(`/movie/${movieId}/reviews`);\n\n\treturn data;\n};\n"],"names":["useState","fetchResultCast","setFetchResultCast","movieId","useParams","useEffect","fetchCast","requestCasts","result","console","log","className","cast","length","map","el","src","profile_path","alt","original_name","character","id","fetchResultReviews","setFetchResultReviews","fetchReviews","requestReviews","results","message","author","content","ResultMovieDetailse","setResultMovieDetailse","location","useLocation","backMoviesPageRef","useRef","state","from","fetchMovieDetails","requestDetails","data","to","current","styles","poster_path","title","original_title","popularity","overview","genres","genre","name","Suspense","fallback","Loader","path","element","instance","axios","baseURL","params","language","api_key","requestTrendMovies","get","requestMovies","inputValue","query"],"sourceRoot":""}